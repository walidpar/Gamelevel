Zone File//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
>class,zm_mod_level
>group,modtools

xmodel,skybox_default_day
material,luts_t7_default

include,logical_perks

	
// BSP
col_map,maps/zm/zm_towerofdemise.d3dbsp
gfx_map,maps/zm/zm_towerofdemise.d3dbsp

// Audio
sound,zm_towerofdemise

scriptparsetree,scripts/zm/zm_towerofdemise.gsc
scriptparsetree,scripts/zm/zm_towerofdemise.csc

scriptparsetree,scripts/zm/ugxmods_timedgp.gsc

scriptparsetree,scripts/zm/ugxmods_buyable_ending.gsc


//SG4Y Flashlight FX
fx,sg4y/flashlight/flashlight_loop
fx,sg4y/flashlight/flashlight_loop_world
//fx,sg4y/flashlight/flashlight_loop_view_moths
scriptparsetree,scripts/sg4y/flashlight/zm_flashlight.gsc
scriptparsetree,scripts/sg4y/flashlight/zm_flashlight.csc

stringtable,gamedata/weapons/zm/zm_levelcommon_weapons.csv 

weapon,iw8_50gs
weapon,iw8_50gs_rdw_up_zm
weapon,iw8_50gs_ldw_up_zm

weapon,iw8_357
weapon,iw8_357_up

weapon,iw8_725
weapon,iw8_725_up

weapon,iw8_1911
weapon,iw8_1911_rdw_up_zm
weapon,iw8_1911_ldw_up_zm

weapon,iw8_ak47
weapon,iw8_ak47_up_zm
weapon,iw8_ak47_launcher_zm
weapon,iw8_ak74u
weapon,iw8_ak74u_up
weapon,iw8_rpk
weapon,iw8_rpk_up

weapon,iw8_an94
weapon,iw8_an94_up

weapon,iw8_asval
weapon,iw8_asval_up
weapon,iw8_vintorez
weapon,iw8_vintorez_up

weapon,iw8_aug_ar
weapon,iw8_aug_ar_up
weapon,iw8_aug_lmg
weapon,iw8_aug_lmg_up
weapon,iw8_aug_smg
weapon,iw8_aug_smg_up

weapon,iw8_ax50
weapon,iw8_ax50_up

weapon,iw8_bruenmk9
weapon,iw8_bruenmk9_up

weapon,iw8_cr56
weapon,iw8_cr56_up

weapon,iw8_cx9
weapon,iw8_cx9_up

weapon,iw8_dragunov
weapon,iw8_dragunov_up

weapon,iw8_ebr14
weapon,iw8_ebr14_up
weapon,iw8_m21ebr
weapon,iw8_m21ebr_up

weapon,iw8_fal
weapon,iw8_fal_up_zm
weapon,iw8_fal_shotty_zm

weapon,iw8_fennec
weapon,iw8_fennec_up

weapon,iw8_finn
weapon,iw8_finn_up
weapon,iw8_chainsaw
weapon,iw8_chainsaw_up

weapon,iw8_scar17s
weapon,iw8_scar17s_up_zm
weapon,iw8_scar17s_launcher_zm
weapon,iw8_scar_pdw
weapon,iw8_scar_pdw_up
weapon,iw8_scar_tpr
weapon,iw8_scar_tpr_up

weapon,iw8_fr556
weapon,iw8_fr556_up

weapon,iw8_grau556
weapon,iw8_grau556_up
weapon,iw8_sig550
weapon,iw8_sig550_up

weapon,iw8_hdr
weapon,iw8_hdr_up

weapon,iw8_holger26
weapon,iw8_holger26_up
weapon,iw8_g36k
weapon,iw8_g36k_up

weapon,iw8_iso
weapon,iw8_iso_up

weapon,iw8_jak12
weapon,iw8_jak12_up

weapon,iw8_kar98k_scope
weapon,iw8_kar98k_scope_up
weapon,iw8_kar98k_irons
weapon,iw8_kar98k_irons_up

weapon,iw8_kilo141
weapon,iw8_kilo141_up

weapon,iw8_m4a1
weapon,iw8_m4a1_up_zm
weapon,iw8_m4a1_shotty_zm
weapon,iw8_m4a1_classic
weapon,iw8_m4a1_classic_up
weapon,iw8_m4a1_smg
weapon,iw8_m4a1_smg_up
weapon,iw8_m4a1_sniper
weapon,iw8_m4a1_sniper_up
weapon,iw8_m16a4
weapon,iw8_m16a4_up_zm
weapon,iw8_m16a4_launcher_zm

weapon,iw8_m13
weapon,iw8_m13_up

weapon,iw8_m19
weapon,iw8_m19_up

weapon,iw8_m91
weapon,iw8_m91_up

weapon,iw8_mg34
weapon,iw8_mg34_up

weapon,iw8_minigun
weapon,iw8_minigun_up

weapon,iw8_mk2carbine
weapon,iw8_mk2carbine_up

weapon,iw8_model680
weapon,iw8_model680_up

weapon,iw8_mp5
weapon,iw8_mp5_up
weapon,iw8_mp5k
weapon,iw8_mp5k_up
weapon,iw8_mp5sd
weapon,iw8_mp5sd_up

weapon,iw8_mp7
weapon,iw8_mp7_up

weapon,iw8_oden
weapon,iw8_oden_up
weapon,iw8_vks
weapon,iw8_vks_up

weapon,iw8_origin12
weapon,iw8_origin12_up

weapon,iw8_p90
weapon,iw8_p90_up

weapon,iw8_pkm
weapon,iw8_pkm_up

weapon,iw8_bizon
weapon,iw8_bizon_up

weapon,iw8_r90
weapon,iw8_r90_up

weapon,iw8_raalmg
weapon,iw8_raalmg_up

weapon,iw8_ram7
weapon,iw8_ram7_up_zm
weapon,iw8_ram7_shotty_zm

weapon,iw8_renetti
weapon,iw8_renetti_rdw_up_zm
weapon,iw8_renetti_ldw_up_zm
weapon,iw8_beretta93r
weapon,iw8_beretta93r_up

weapon,iw8_rpg7
weapon,iw8_rpg7_up

weapon,iw8_rytecamr
weapon,iw8_rytecamr_up

weapon,iw8_sa87
weapon,iw8_sa87_up

weapon,iw8_sks
weapon,iw8_sks_up

weapon,iw8_spr208_scope
weapon,iw8_spr208_scope_up
weapon,iw8_spr208_irons
weapon,iw8_spr208_irons_up

weapon,iw8_striker45
weapon,iw8_striker45_up

weapon,iw8_sykov
weapon,iw8_sykov_up
weapon,iw8_makarovpb
weapon,iw8_makarovpb_rdw_up_zm
weapon,iw8_makarovpb_ldw_up_zm
weapon,iw8_stechkin_aps
weapon,iw8_stechkin_aps_rdw_up_zm
weapon,iw8_stechkin_aps_ldw_up_zm
weapon,iw8_stechkin_apb
weapon,iw8_stechkin_apb_up

weapon,iw8_uzi
weapon,iw8_uzi_up
weapon,iw8_mini_uzi
weapon,iw8_mini_uzi_up

weapon,iw8_vlkrogue
weapon,iw8_vlkrogue_up

weapon,iw8_x16
weapon,iw8_x16_up
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Flashlight GSC ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#using scripts\shared\system_shared;
#using scripts\shared\callbacks_shared;
#using scripts\shared\clientfield_shared;

#insert scripts\shared\shared.gsh;
#insert scripts\shared\version.gsh;

#namespace zm_flashlight;
// dont replace anything in your .csc, only add stuff :)

REGISTER_SYSTEM( "zm_flashlight", &main, undefined )

function main()
{
	//// CLIENTFIELDS //// ##############################################################################

    clientfield::register( "toplayer",		"flashlight_fx_view",			VERSION_SHIP, 1, "int" );
    clientfield::register( "allplayers",	"flashlight_fx_world",			VERSION_SHIP, 1, "int" );

    //-> Add callback after zm_usermap::main();

	callback::on_connect 	( &on_player_connect );
}


function on_player_connect()
{
	self thread flashlight_init();
}

function flashlight_init()
{
	self.flashlight_enabled = true;

	self clientfield::set_to_player( "flashlight_fx_view", 1 ); // Flashlight is enabled on spawn
	self clientfield::set( "flashlight_fx_world",	 1 );		// Flashlight is enabled on spawn

	self thread flashlight_watch_usebutton();
}

function flashlight_watch_usebutton()
{
	self endon( "kill_flashlight" );
	
	while( 1 )
	{
		if( self ActionSlotFourButtonPressed() )
		{
			catch_next = false;
			for( i = 0; i <= 0.5; i += 0.05 )
			{
				if( catch_next && self ActionSlotFourButtonPressed() )
				{
					if( !self.flashlight_enabled )
					{
						self flashlight_state( "ON" );
						wait 1;
						break;
					}

					else
					{
						self flashlight_state( "OFF" );
						wait 1;
						break;
					}
				}

				else if( !( self ActionSlotFourButtonPressed() ) )
					catch_next = true;

				wait 0.05;
			}
		}
		wait 0.05;
	}
}

function flashlight_state( state )
{
	if( !isdefined( state ) )
		break;

	if( state == "ON" )
	{
		self clientfield::set_to_player( "flashlight_fx_view", 1 );
		self clientfield::set( "flashlight_fx_world",	 1 );
		self.flashlight_enabled = true;
		break;
	}

	if( state == "OFF" )
	{
		self clientfield::set_to_player( "flashlight_fx_view", 0 );
		self clientfield::set( "flashlight_fx_world",	 0 );
		self.flashlight_enabled = false;
		break;
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Flashlight CSC ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#using scripts\shared\system_shared;
#using scripts\shared\callbacks_shared;
#using scripts\shared\clientfield_shared;

#insert scripts\shared\shared.gsh;
#insert scripts\shared\version.gsh;

#namespace zm_flashlight;
// dont replace anything in your .csc, only add stuff :)

#precache ("client_fx", "sg4y/flashlight/flashlight_loop");
#precache ("client_fx", "sg4y/flashlight/flashlight_loop_world");
#precache ("client_fx", "sg4y/flashlight/flashlight_loop_view_moths");

REGISTER_SYSTEM( "zm_flashlight", &main, undefined )

function main()
{
    //// LEVEL EFFECTS //// ##############################################################################

    level._effect[ "flashlight_fx_loop_view" ]          = "sg4y/flashlight/flashlight_loop";
    level._effect[ "flashlight_fx_loop_view_moths" ]    = "sg4y/flashlight/flashlight_loop_view_moths";
    level._effect[ "flashlight_fx_loop_world" ]         = "sg4y/flashlight/flashlight_loop_world";

    //// CLIENTFIELDS //// ##############################################################################

    clientfield::register( "toplayer",      "flashlight_fx_view",           VERSION_SHIP, 1, "int", &flashlight_fx_view,        !CF_HOST_ONLY, !CF_CALLBACK_ZERO_ON_NEW_ENT );
    clientfield::register( "allplayers",    "flashlight_fx_world",          VERSION_SHIP, 1, "int", &flashlight_fx_world,       !CF_HOST_ONLY, !CF_CALLBACK_ZERO_ON_NEW_ENT );
}

//// FLASHLIGHT //// ##############################################################################

function flashlight_fx_view( localClientNum, oldVal, newVal, bNewEnt, bInitialSnap, fieldName, bWasTimeJump ) // self == player
{
    if ( newVal )
    {
        if ( isdefined( self.fx_flashlight_view ) )
            KillFx( localClientNum, self.fx_flashlight_view );

        if ( isdefined( self.fx_flashlight_moth ) )
            KillFx( localClientNum, self.fx_flashlight_moth );

        flash_fx_view = level._effect[ "flashlight_fx_loop_view" ];
            self.fx_flashlight_view = PlayViewmodelFx( localclientnum, flash_fx_view, "tag_flashlight" ); 

        flash_fx_moth = level._effect[ "flashlight_fx_loop_view_moths" ];
            self.fx_flashlight_moth = PlayFxOnTag( localClientNum, flash_fx_moth, self, "j_spine4" );

        playsound( localClientNum, "1_flashlight_click", self.origin ); 
    }

    else
    {
        if ( isdefined( self.fx_flashlight_view ) )
        {
            KillFx( localClientNum, self.fx_flashlight_view );
                self.fx_flashlight_view = undefined;

            playsound( localClientNum, "1_flashlight_click", self.origin ); 
        }

        if ( isdefined( self.fx_flashlight_moth ) )
        {
            KillFx( localClientNum, self.fx_flashlight_moth );
                self.fx_flashlight_moth = undefined;
        }
    }
}

function flashlight_fx_world( localClientNum, oldVal, newVal, bNewEnt, bInitialSnap, fieldName, bWasTimeJump ) // self == player
{
    if ( newVal )
    {
        curr_player = GetLocalPlayer( localClientNum );

        if ( isdefined( self.fx_flashlight_world ) )
            KillFx( localClientNum, self.fx_flashlight_world );

        if( curr_player != self )
        {
            flash_fx_world = level._effect[ "flashlight_fx_loop_world" ];
                self.fx_flashlight_world = PlayFxOnTag( localClientNum, flash_fx_world, self, "tag_flashlight" );
        }
    }

    else
    {
        if ( isdefined( self.fx_flashlight_world ) )
        {
            KillFx( localClientNum, self.fx_flashlight_world );
                self.fx_flashlight_world = undefined;
        }
    }
}

The maps main CSC file ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#using scripts\codescripts\struct;
#using scripts\shared\audio_shared;
#using scripts\shared\callbacks_shared;
#using scripts\shared\clientfield_shared;
#using scripts\shared\exploder_shared;
#using scripts\shared\scene_shared;
#using scripts\shared\util_shared;

#insert scripts\shared\shared.gsh;
#insert scripts\shared\version.gsh;

#using scripts\zm\_load;
#using scripts\zm\_zm_weapons;

//Perks
#using scripts\zm\_zm_pack_a_punch;
#using scripts\zm\_zm_perk_additionalprimaryweapon;
#using scripts\zm\_zm_perk_doubletap2;
#using scripts\zm\_zm_perk_deadshot;
#using scripts\zm\_zm_perk_juggernaut;
#using scripts\zm\_zm_perk_quick_revive;
#using scripts\zm\_zm_perk_sleight_of_hand;
#using scripts\zm\_zm_perk_staminup;
#using scripts\zm\_zm_perk_widows_wine;
#using scripts\zm\logical\perks\_zm_perk_ffyl;
#using scripts\zm\logical\perks\_zm_perk_icu;
#using scripts\zm\logical\perks\_zm_perk_tactiquilla;
#using scripts\zm\logical\perks\_zm_perk_milk;





//Powerups
#using scripts\zm\_zm_powerup_double_points;
#using scripts\zm\_zm_powerup_carpenter;
#using scripts\zm\_zm_powerup_fire_sale;
#using scripts\zm\_zm_powerup_free_perk;
#using scripts\zm\_zm_powerup_full_ammo;
#using scripts\zm\_zm_powerup_insta_kill;
#using scripts\zm\_zm_powerup_nuke;
#using scripts\zm\_zm_powerup_weapon_minigun;


//Traps
#using scripts\zm\_zm_trap_electric;

#using scripts\zm\zm_usermap;

#using scripts\sg4y\flashlight\zm_flashlight;

function main()
{
	
	zm_usermap::main();

	include_weapons();
	
	util::waitforclient( 0 );
}

function include_weapons()
{
	zm_weapons::load_weapon_spec_from_table("gamedata/weapons/zm/zm_levelcommon_weapons.csv", 1);
}
The maps main GSC File //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#using scripts\zm\ugxmods_timedgp;

#using scripts\zm\ugxmods_buyable_ending;

#using scripts\codescripts\struct;

#using scripts\shared\array_shared;
#using scripts\shared\callbacks_shared;
#using scripts\shared\clientfield_shared;
#using scripts\shared\compass;
#using scripts\shared\exploder_shared;
#using scripts\shared\flag_shared;
#using scripts\shared\laststand_shared;
#using scripts\shared\math_shared;
#using scripts\shared\scene_shared;
#using scripts\shared\util_shared;

#insert scripts\shared\shared.gsh;
#insert scripts\shared\version.gsh;

#insert scripts\zm\_zm_utility.gsh;

#using scripts\zm\_load;
#using scripts\zm\_zm;
#using scripts\zm\_zm_audio;
#using scripts\zm\_zm_powerups;
#using scripts\zm\_zm_utility;
#using scripts\zm\_zm_weapons;
#using scripts\zm\_zm_zonemgr;

#using scripts\shared\ai\zombie_utility;

//Perks
#using scripts\zm\_zm_pack_a_punch;
#using scripts\zm\_zm_pack_a_punch_util;
#using scripts\zm\_zm_perk_additionalprimaryweapon;
#using scripts\zm\_zm_perk_doubletap2;
#using scripts\zm\_zm_perk_deadshot;
#using scripts\zm\_zm_perk_juggernaut;
#using scripts\zm\_zm_perk_quick_revive;
#using scripts\zm\_zm_perk_sleight_of_hand;
#using scripts\zm\_zm_perk_staminup;
#using scripts\zm\_zm_perk_widows_wine;
#using scripts\zm\logical\perks\_zm_perk_ffyl;
#using scripts\zm\logical\perks\_zm_perk_icu;
#using scripts\zm\logical\perks\_zm_perk_tactiquilla;
#using scripts\zm\logical\perks\_zm_perk_milk;



//Powerups
#using scripts\zm\_zm_powerup_double_points;
#using scripts\zm\_zm_powerup_carpenter;
#using scripts\zm\_zm_powerup_fire_sale;
#using scripts\zm\_zm_powerup_free_perk;
#using scripts\zm\_zm_powerup_full_ammo;
#using scripts\zm\_zm_powerup_insta_kill;
#using scripts\zm\_zm_powerup_nuke;
#using scripts\zm\_zm_powerup_weapon_minigun;


//Traps
#using scripts\zm\_zm_trap_electric;

#using scripts\zm\zm_usermap;

#using scripts\sg4y\flashlight\zm_flashlight;

//*****************************************************************************
// MAIN
//*****************************************************************************

function main()
{

	level thread new_zombie_speed();

	zm_usermap::main();

	
	level.player_starting_points = 666;

	level.perk_purchase_limit = 20;
	
	level._zombie_custom_add_weapons =&custom_add_weapons;
	
	//Setup the levels Zombie Zone Volumes
	level.zones = [];
	level.zone_manager_init_func =&usermap_test_zone_init;
	init_zones[0] = "start_zone";
	level thread zm_zonemgr::manage_zones( init_zones );

	level.pathdist_type = PATHDIST_ORIGINAL;
}

function usermap_test_zone_init()
{

	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_2", "activate_zone_2" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_3", "activate_zone_3" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_4", "activate_zone_4" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_5", "activate_zone_5" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_6", "activate_zone_6" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_7", "activate_zone_7" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_8", "activate_zone_8" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_9", "activate_zone_9" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_10", "activate_zone_10" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_11", "activate_zone_11" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_12", "activate_zone_12" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_13", "activate_zone_13" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_14", "activate_zone_14" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_15", "activate_zone_15" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_16", "activate_zone_16" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_17", "activate_zone_17" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_18", "activate_zone_18" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_19", "activate_zone_19" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_20", "activate_zone_20" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_21", "activate_zone_21" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_22", "activate_zone_22" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_23", "activate_zone_23" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_24", "activate_zone_24" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_25", "activate_zone_25" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_26", "activate_zone_26" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_27", "activate_zone_27" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_28", "activate_zone_28" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_29", "activate_zone_29" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_30", "activate_zone_30" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_31", "activate_zone_31" );
	zm_zonemgr::add_adjacent_zone( "start_zone", "zone_32", "activate_zone_32" );
	
	level flag::init( "always_on" );
	level flag::set( "always_on" );


}	

function custom_add_weapons()
{
	zm_weapons::load_weapon_spec_from_table("gamedata/weapons/zm/zm_levelcommon_weapons.csv", 1);
}

function new_zombie_speed()
{
	level flag::wait_till( "initial_blackscreen_passed" ); 
	zombie_utility::set_zombie_var( "zombie_move_speed_multiplier", 	  75,	false );	//	Multiply by the round number to give the base speed value.  0-40 = walk, 41-70 = run, 71+ = sprint
	zombie_utility::set_zombie_var( "zombie_move_speed_multiplier_easy",  75,	false );	//	Multiply by the round number to give the base speed value.  0-40 = walk, 41-70 = run, 71+ = sprint
	level.zombie_move_speed			= level.round_number * level.zombie_vars["zombie_move_speed_multiplier"]; 
}

